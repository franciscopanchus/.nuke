set cut_paste_input [stack 0]
version 11.3 v2
push $cut_paste_input
NoOp {
 name NODE_DISABLE
 tile_color 0xff
 label "\[expr \{ \[value disable] == true ? \"Nodes Disabled\" : \"Nodes Enabled\" \}]"
 selected true
 xpos 1195
 ypos -531
 addUserKnob {20 FirstStep l "First Step"}
 addUserKnob {22 addNodes l "Selected Nodes to List" T "#############ADD button######\n\n\nnode_list = \[]\n\n\nfor i in nuke.selectedNodes():\n    if i.name() == ('NODE_DISABLE'):\n        print \"it's not possible to selected this Node, \\n its will be a paradox\"\n\n    else:\n        node_list.append(i.name())\n\n\n        nuke.thisNode().knob('addMoreNodes').setVisible(True)\n        nuke.thisNode().knob('addNodes').setVisible(False)\n\n\n        node_list_cleaned = '\\n• '.join(node_list)\n\n\n        nuke.thisNode()\['txtknob_node_list'].setValue(\"\\n• \"+node_list_cleaned)\n\n        for i in node_list:\n\n\n            if nuke.toNode(i).knob('disable'):\n                nuke.toNode(i)\['disable'].setExpression('NODE_DISABLE.disable')  \n            \n\n            else:\n                print \" - \"+i+\" does not have a 'disable' knob. Ignoring...\"\n\n\nprint node_list\n\n# Enable the 'Add By Class' buttons, and set their colour so it's obvious that they're un-disabled.\nnuke.thisNode().knob('AddDefocus').setEnabled(True)\nnuke.thisNode().knob('AddDefocus').setLabel(\"<font color='orange'>DefocusToList</font>\")\n\nnuke.thisNode().knob('AddZDefocus').setEnabled(True)\nnuke.thisNode().knob('AddZDefocus').setLabel(\"<font color='red'>ZDefocusToList</font>\")\n\nnuke.thisNode().knob('AddMotionBlur').setEnabled(True)\nnuke.thisNode().knob('AddMotionBlur').setLabel(\"<font color='blue'>MotionBlurToList</font>\")\n\n" +STARTLINE}
 addUserKnob {22 addMoreNodes l "Add More to the list" +HIDDEN T "# --------  addMoreNodes BUTTON  ------------\n\n\n# Loop through selected nodes.\nfor i in nuke.selectedNodes():\n        if i.name() == ('NODE_DISABLE'):\n            print \"it's not possible to selected this Node, \\n its will be a paradox\"\n\n\n        else:\n\n            # Check if the selected node is already in node_list.\n            if i.name() in node_list:\n\n                # If it is, print a message to the Script Editor.\n                print i.name()+\" is already in the list.\"\n\n            # But if it isn't in node_list, add it!\n            else:\n                node_list.append(i.name())\n\n\n        # Turn the list into a single string, and add\n        # a line break, a bullet point and a space in between each item.\n        node_list_cleaned = '\\n• '.join(node_list)\n\n        # Set the value of the text knob.\n        nuke.thisNode()\['txtknob_node_list'].setValue(\"\\n• \"+node_list_cleaned)\n\n\n        for i in node_list:\n\n\n            if nuke.toNode(i).knob('disable'):\n                nuke.toNode(i)\['disable'].setExpression('NODE_DISABLE.disable')  \n            \n\n            else:\n                print \" - \"+i+\" does not have a 'disable' knob. Ignoring...\"\n\nprint node_list\n" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {22 clearList l "Clear List" T "# --------  clearList BUTTON  ------------\n\n\n\n# Reset button visibility\nnuke.thisNode().knob('addNodes').setVisible(True)\nnuke.thisNode().knob('addMoreNodes').setVisible(False)\n\n# Reset the NODE LIST: text knob to be \"None\"\n\nnuke.thisNode()\['txtknob_node_list'].setValue(\"None\")\n\nfor i in node_list:\n    nuke.toNode(i)\['disable'].clearAnimated()   \n    nuke.toNode(i)\['disable'].setValue(0)\n    \n\n\n\n\nnuke.thisNode().knob('AddDefocus').setEnabled(False)\nnuke.thisNode().knob('AddDefocus').setLabel(\"<font color='grey'>DefocusToList</font>\")\n\nnuke.thisNode().knob('AddZDefocus').setEnabled(False)\nnuke.thisNode().knob('AddZDefocus').setLabel(\"<font color='grey'>ZDefocusToList</font>\")\n\nnuke.thisNode().knob('AddMotionBlur').setEnabled(False)\nnuke.thisNode().knob('AddMotionBlur').setLabel(\"<font color='grey'>MotionBlurToList</font>\")\n\n#Clear Nodes\ndel node_list" +STARTLINE}
 addUserKnob {26 space l "" -STARTLINE T "    "}
 addUserKnob {6 disable -STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 txtknob_node_list l "NODE LIST:" T None}
 addUserKnob {20 AddingByClass}
 addUserKnob {26 instructions l "" +STARTLINE T "Please, first in press Select Node to List\nin \"First step\""}
 addUserKnob {26 ""}
 addUserKnob {22 AddDefocus l "<font color='grey'>DefocusToList</font>" +DISABLED T "#############################DefocusSERCHER#####################\n\nallNodes = nuke.allNodes()\nClass = nuke.thisNode().Class()\n\nfor i in allNodes:\n    if i.Class() == \"Defocus\" and i.name() not in node_list:\n        node_list.append(i.name()) \n\nfor i in node_list:\n\n    if nuke.toNode(i).knob('disable'):\n        nuke.toNode(i)\['disable'].setExpression('NODE_DISABLE.disable')  \n\n\n\nnode_list_cleaned = '\\n• '.join(node_list)\nnuke.thisNode()\['txtknob_node_list'].setValue(\"\\n• \"+node_list_cleaned)" +STARTLINE}
 addUserKnob {22 AddZDefocus l "<font color='grey'>ZDefocusToList</font>" +DISABLED T "#############################DefocusSERCHER#####################\n\nallNodes = nuke.allNodes()\nClass = nuke.thisNode().Class()\n\nfor i in allNodes:\n    if i.Class() == \"ZDefocus2\" and i.name() not in node_list:\n        node_list.append(i.name()) \n\nfor i in node_list:\n\n    if nuke.toNode(i).knob('disable'):\n        nuke.toNode(i)\['disable'].setExpression('NODE_DISABLE.disable')  \n\n\n\nnode_list_cleaned = '\\n• '.join(node_list)\nnuke.thisNode()\['txtknob_node_list'].setValue(\"\\n• \"+node_list_cleaned)\n\n\nnode_list_cleaned = '\\n• '.join(node_list)\nnuke.thisNode()\['txtknob_node_list'].setValue(\"\\n• \"+node_list_cleaned)" +STARTLINE}
 addUserKnob {22 AddMotionBlur l "<font color='grey'>MotionBlurToList</font>" +DISABLED T "#############################DefocusSERCHER#####################\n\nallNodes = nuke.allNodes()\nClass = nuke.thisNode().Class()\n\nfor i in allNodes:\n    if i.Class() == \"MotionBlur\" and i.name() not in node_list:\n        node_list.append(i.name()) \n\nfor i in node_list:\n\n    if nuke.toNode(i).knob('disable'):\n        nuke.toNode(i)\['disable'].setExpression('NODE_DISABLE.disable')  \n\n\n\nnode_list_cleaned = '\\n• '.join(node_list)\nnuke.thisNode()\['txtknob_node_list'].setValue(\"\\n• \"+node_list_cleaned)\n" +STARTLINE}
}
