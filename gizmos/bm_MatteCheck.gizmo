#! /builds/nuke/9.0v5/8a60c67916/priv/libnuke-9.0.5.so -nx
version 9.0 v5
Group {
name bm_MatteCheck
inputs 2
help "A simple tool designed to check the accuracy of mattes. Choose between overlaying a red color, viewing the matte against a grey background, or viewing the matte against a checkerboard.\n\n\nCreated by Ben McEwan\nwww.benmcewan.com"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() in ('Type', 'showPanel'):\n    Type = n\['Type'].value()\n    if Type == 'Colour Overlay':\n\n        n\['overlayColour'].setVisible(True)\n        n\['overlayMix'].setVisible(True)\n        n\['greyAmt'].setVisible(False)\n        n\['chkSize'].setVisible(False)\n        n\['chkContrast'].setVisible(False)\n\n    elif Type == 'Grey Background':\n\n        n\['overlayColour'].setVisible(False)\n        n\['overlayMix'].setVisible(False)\n        n\['greyAmt'].setVisible(True)\n        n\['chkSize'].setVisible(False)\n        n\['chkContrast'].setVisible(False)\n\n    elif Type == 'Checkerboard':\n\n        n\['overlayColour'].setVisible(False)\n        n\['overlayMix'].setVisible(False)\n        n\['greyAmt'].setVisible(False)\n        n\['chkSize'].setVisible(True)\n        n\['chkContrast'].setVisible(True)"
tile_color 0x232323ff
note_font Verdana
mapsize {0.15 0.15}
addUserKnob {20 Options}
addUserKnob {26 ""}
addUserKnob {4 Type t "Choose between a colour overlay, or placing your matte over a grey background." M {"Colour Overlay" "Grey Background" Checkerboard "" "" "" "" "" "" "" ""}}
addUserKnob {26 ""}
addUserKnob {18 overlayColour l "Overlay Colour"}
overlayColour {1 0 0}
addUserKnob {6 overlayColour_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {7 overlayMix l "Overlay Mix"}
overlayMix 0.5
addUserKnob {7 greyAmt l "Grey Value" t "Brightness of the grey backdrop." +HIDDEN}
greyAmt 0.18
addUserKnob {7 chkSize l Size +HIDDEN R 0 64}
chkSize 17
addUserKnob {7 chkContrast l Contrast +HIDDEN}
chkContrast 0.27
addUserKnob {26 ""}
}
Input {
inputs 0
name matte
xpos -97
ypos -413
number 1
}
Dot {
name Dot4
xpos -63
ypos -320
}
set Nf92b50d0 [stack 0]
Invert {
channels alpha
name Invert1
xpos 76
ypos -329
}
set Nf9297e10 [stack 0]
Dot {
name Dot5
xpos 313
ypos -320
}
CheckerBoard2 {
inputs 0
boxsize {{chkSize}}
color0 {0.1000000015 0.1000000015 0.1000000015 1}
color2 {0.1000000015 0.1000000015 0.1000000015 1}
linecolor 0
centerlinewidth 0
name CheckerBoard1
xpos 373
ypos -461
}
ColorCorrect {
contrast {{chkContrast}}
name ColorCorrect1
xpos 373
ypos -389
}
Input {
inputs 0
name plate
selected true
xpos -94
ypos -495
}
set Nf927cd40 [stack 0]
Dot {
name Dot2
xpos 110
ypos -492
}
set Nc735ef90 [stack 0]
Dot {
name Dot3
xpos 313
ypos -492
}
Keymix {
inputs 3
name Keymix3
xpos 279
ypos -395
}
push $Nf9297e10
Constant {
inputs 0
color {{greyAmt} {greyAmt} {greyAmt} {curve}}
name Constant2
xpos 177
ypos -404
}
push $Nc735ef90
Keymix {
inputs 3
name Keymix2
xpos 76
ypos -387
}
push $Nf92b50d0
Constant {
inputs 0
color {{overlayColour.r} {overlayColour.g} {overlayColour.b} {curve}}
name Constant1
xpos -343
ypos -346
}
push $Nf927cd40
Dot {
name Dot1
xpos -172
ypos -492
}
Keymix {
inputs 3
mix {{overlayMix}}
name Keymix1
xpos -206
ypos -329
}
Switch {
inputs 3
which {{Type x1 1}}
name typeSwitch1
xpos -108
ypos -208
}
Output {
name Output1
xpos -108
ypos -118
}
end_group
